Challenge 1

Given an array of integers, return a new array with each value doubled.

For example:

[1, 2, 3] --> [2, 4, 6]

Answer: 

function maps(x){
  return x.map(n => n * 2);
}



Challenge 2

Implement a function which multiplies two numbers.

let multiply = (x, y) => x * y;


Challenge 3

Complete the function that takes a non-negative integer n as input, 
and returns a list of all the powers of 2 with the exponent ranging from 0 to n ( inclusive ).

Examples:
n = 0  ==> [1]        # [2^0]
n = 1  ==> [1, 2]     # [2^0, 2^1]
n = 2  ==> [1, 2, 4]  # [2^0, 2^1, 2^2]

Answer:

function powersOfTwo(n){
  let result = [];
  for (var i = 0; i <= n; i++) {
    result.push(Math.pow(2, i));
  }
  return result;
}



Challenge 4

Given a non-negative integer, 3 for example, return a string with a murmur: "1 sheep...2 sheep...3 sheep...". 
Input will always be valid, i.e. no negative integers.

Answer:

var countSheep = function (num){
  let numberOfSheep = '';
  for(let i = 1; i <= num; i++) {
     numberOfSheep += `${i} sheep...`;
  }
  return numberOfSheep
}


Challenge 5

Timmy & Sarah think they are in love, but around where they live, they will only know once they pick a flower each. 
If one of the flowers has an even number of petals and the other has an odd number of petals it means they are in love.

Write a function that will take the number of petals of each flower and return true if they are in love and false if they aren't.

Answer:

function lovefunc(flower1, flower2){
  if(flower1 % 2 === 0 && flower2 % 2 !== 0) {
    return true;
  } else if(flower1 % 2 !==0 && flower2 % 2 === 0){
    return true;
  } else {
    return false
  }
}



Challenge 6

Your task is to make two functions (max and min, or maximum and minimum, etc., 
depending on the language) that receive a list of integers as input and return, 
respectively, the largest and lowest number in that list.

Examples (Input -> Output)
* [4,6,2,1,9,63,-134,566]         -> max = 566, min = -134
* [-52, 56, 30, 29, -54, 0, -110] -> min = -110, max = 56
* [42, 54, 65, 87, 0]             -> min = 0, max = 87
* [5]                             -> min = 5, max = 5


Answer:

var min = function (list) {
  let sorted = list.sort((a, b) => a - b);
  let sortedList = sorted[0];
  console.log(sortedList);
};

var max = function (listTwo) {
  let secondSorted = listTwo.sort((a, b) => a - b);
  let secondList = secondSorted[secondSorted.length - 1];
  console.log(secondList);
};



Challenge 7

In this kata you will create a function that takes in a list and returns a list with the reverse order.

Examples (Input -> Output)
* [1, 2, 3, 4]  -> [4, 3, 2, 1]
* [9, 2, 0, 7]  -> [7, 0, 2, 9]


Answer:

function reverseList(list) {
  return list.reverse();
}



Challenge 8

Write a function that checks if a given string (case insensitive) is a palindrome.


Answer:

function isPalindrome(x) {
  x = x.toLowerCase();
  if (x === x.split("").reverse().join("")) {
    console.log(`It's a palindrome!`);
  } else {
    console.log(`Not a palindrome`);
  }
}




Challenge 9

Finish the solution so that it sorts the passed in array of numbers. If the function passes in an empty array or null/nil value then it should return an empty array.

For example:

solution([1, 2, 10, 50, 5]); // should return [1,2,5,10,50]
solution(null); // should return []


Answer:

function solution(nums) {
  if (nums === null || nums === []) {
    return [];
  } else {
    return nums.sort((a, b) => a - b);
  }
}



Challenge 10

Remove an exclamation mark from the end of a string. For a beginner kata, you can assume that the input data is always a string, no need to verify it.

Examples:

remove("Hi!") === "Hi"
remove("Hi!!!") === "Hi!!"
remove("!Hi") === "!Hi"
remove("!Hi!") === "!Hi"
remove("Hi! Hi!") === "Hi! Hi"
remove("Hi") === "Hi"


Answer:

function remove (string) {
   if (string.charAt(string.length - 1) === "!") {
    return string = string.substr(0, string.length - 1);
  } else {
    return string;
  }
}
