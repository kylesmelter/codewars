Challenge 1

Given an array of integers, return a new array with each value doubled.

For example:

[1, 2, 3] --> [2, 4, 6]

Answer: 

function maps(x){
  return x.map(n => n * 2);
}



Challenge 2

Implement a function which multiplies two numbers.

let multiply = (x, y) => x * y;


Challenge 3

Complete the function that takes a non-negative integer n as input, 
and returns a list of all the powers of 2 with the exponent ranging from 0 to n ( inclusive ).

Examples:
n = 0  ==> [1]        # [2^0]
n = 1  ==> [1, 2]     # [2^0, 2^1]
n = 2  ==> [1, 2, 4]  # [2^0, 2^1, 2^2]

Answer:

function powersOfTwo(n){
  let result = [];
  for (var i = 0; i <= n; i++) {
    result.push(Math.pow(2, i));
  }
  return result;
}



Challenge 4

Given a non-negative integer, 3 for example, return a string with a murmur: "1 sheep...2 sheep...3 sheep...". 
Input will always be valid, i.e. no negative integers.

Answer:

var countSheep = function (num){
  let numberOfSheep = '';
  for(let i = 1; i <= num; i++) {
     numberOfSheep += `${i} sheep...`;
  }
  return numberOfSheep
}


Challenge 5

Timmy & Sarah think they are in love, but around where they live, they will only know once they pick a flower each. 
If one of the flowers has an even number of petals and the other has an odd number of petals it means they are in love.

Write a function that will take the number of petals of each flower and return true if they are in love and false if they aren't.

Answer:

function lovefunc(flower1, flower2){
  if(flower1 % 2 === 0 && flower2 % 2 !== 0) {
    return true;
  } else if(flower1 % 2 !==0 && flower2 % 2 === 0){
    return true;
  } else {
    return false
  }
}



Challenge 6

Your task is to make two functions (max and min, or maximum and minimum, etc., 
depending on the language) that receive a list of integers as input and return, 
respectively, the largest and lowest number in that list.

Examples (Input -> Output)
* [4,6,2,1,9,63,-134,566]         -> max = 566, min = -134
* [-52, 56, 30, 29, -54, 0, -110] -> min = -110, max = 56
* [42, 54, 65, 87, 0]             -> min = 0, max = 87
* [5]                             -> min = 5, max = 5


Answer:

var min = function (list) {
  let sorted = list.sort((a, b) => a - b);
  let sortedList = sorted[0];
  console.log(sortedList);
};

var max = function (listTwo) {
  let secondSorted = listTwo.sort((a, b) => a - b);
  let secondList = secondSorted[secondSorted.length - 1];
  console.log(secondList);
};



Challenge 7

In this kata you will create a function that takes in a list and returns a list with the reverse order.

Examples (Input -> Output)
* [1, 2, 3, 4]  -> [4, 3, 2, 1]
* [9, 2, 0, 7]  -> [7, 0, 2, 9]


Answer:

function reverseList(list) {
  return list.reverse();
}



Challenge 8

Write a function that checks if a given string (case insensitive) is a palindrome.


Answer:

function isPalindrome(x) {
  x = x.toLowerCase();
  if (x === x.split("").reverse().join("")) {
    console.log(`It's a palindrome!`);
  } else {
    console.log(`Not a palindrome`);
  }
}




Challenge 9

Finish the solution so that it sorts the passed in array of numbers. If the function passes in an empty array or null/nil value then it should return an empty array.

For example:

solution([1, 2, 10, 50, 5]); // should return [1,2,5,10,50]
solution(null); // should return []


Answer:

function solution(nums) {
  if (nums === null || nums === []) {
    return [];
  } else {
    return nums.sort((a, b) => a - b);
  }
}



Challenge 10

Remove an exclamation mark from the end of a string. For a beginner kata, you can assume that the input data is always a string, no need to verify it.

Examples:

remove("Hi!") === "Hi"
remove("Hi!!!") === "Hi!!"
remove("!Hi") === "!Hi"
remove("!Hi!") === "!Hi"
remove("Hi! Hi!") === "Hi! Hi"
remove("Hi") === "Hi"


Answer:

function remove (string) {
   if (string.charAt(string.length - 1) === "!") {
    return string = string.substr(0, string.length - 1);
  } else {
    return string;
  }
}



Challenge 11

You are given the length and width of a 4-sided polygon. The polygon can either be a rectangle or a square.
If it is a square, return its area. If it is a rectangle, return its perimeter.

area_or_perimeter(6, 10) --> 32
area_or_perimeter(3, 3) --> 9


Answer:

const areaOrPerimeter = function(l , w) {
  if(l === w) {
    return l * w
  } else {
    return ((l * 2) + (w * 2))
  }
};




Challenge 12

Let's play rock, paper, scissors! You have to return which player won! In case of a draw return Draw!.

Examples:

rps('scissors','paper') // Player 1 won!
rps('scissors','rock') // Player 2 won!
rps('paper','paper') // Draw!


Answer:

const rps = (p1, p2) => {
  if(p1 === p2 || p2 === p1) {
    return 'Draw!'
  } else if(p1 === 'rock' && p2 === 'paper') {
    return 'Player 2 won!'
  } else if (p1 === 'rock' && p2 === 'scissors') {
    return 'Player 1 won!'
  } else if (p1 === 'paper' && p2 === 'rock') {
    return 'Player 1 won!'
  } else if (p1 === 'paper' && p2 === 'scissors') {
    return 'Player 2 won!'
  } else if (p1 === 'scissors' && p2 === 'rock') {
    return 'Player 2 won!'
  } else if (p1 === 'scissors' && p2 === 'paper') {
    return 'Player 1 won!'
  }
};




Challenge 13

In this Kata we are passing a number (n) into a function.

Your code will determine if the number passed is even (or not).

The function needs to return either a true or false.

Numbers may be positive or negative, integers or floats.

Floats with decimal part non equal to zero are considered UNeven for this kata.


Answer:

function testEven(n) {
    if(n % 2 === 0) {
      return true
    } else {
      return false
    }
}




Challenge 14

Create a function that checks if a number n is divisible by two numbers x AND y. All inputs are positive, non-zero digits.

Examples:
1) n =   3, x = 1, y = 3 =>  true because   3 is divisible by 1 and 3
2) n =  12, x = 2, y = 6 =>  true because  12 is divisible by 2 and 6
3) n = 100, x = 5, y = 3 => false because 100 is not divisible by 3
4) n =  12, x = 7, y = 5 => false because  12 is neither divisible by 7 nor 5


Answer:

function isDivisible(n, x, y) {
  if(n % x === 0 && n % y === 0) {
    return true;
  } else {
    return false
  }
}




Challenge 15

Write a function which converts the input string to uppercase.


Answer:

function makeUpperCase(str) {
  return str.toUpperCase();
}




Challenge 16

Very simple, given an integer or a floating-point number, find its opposite.

Examples:

1: -1
14: -14
-34: 34



Answer:

function opposite(number) {
  if(number === -number) {
    return number
  } else if (number === number) {
    return -number
  }
}





Challenge 17

Given an array of integers your solution should find the smallest integer.

For example:

Given [34, 15, 88, 2] your solution will return 2
Given [34, -345, -1, 100] your solution will return -345
You can assume, for the purpose of this kata, that the supplied array will not be empty.



Answer:

class SmallestIntegerFinder {
  findSmallestInt(args) {
    let sorted = args.sort((a,b) => a - b);
    return sorted[0]
  }
}




Challenge 18

Simple, remove the spaces from the string, then return the resultant string.


Answer:

function noSpace(x){
  let joined = x.split(' ').join('')
  return joined
}




Challenge 19

There was a test in your class and you passed it. Congratulations!
But you're an ambitious person. You want to know if you're better than the average student in your class.

You receive an array with your peers' test scores. Now calculate the average and compare your score!

Return True if you're better, else False!

Note:
Your points are not included in the array of your class's points. For calculating the average point you may add your point to the given array!


Answer:

function betterThanAverage(classPoints, yourPoints) {
  let sorted = classPoints.sort((a,b) => a - b);
  let average = (sorted.reduce((acc,c) => acc + c, 0) / classPoints.length)
  if(yourPoints > average) {
    return true
  } else {
    return false
  }               
}
